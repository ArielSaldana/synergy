"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

//preload views?

var homeComponentInstance = null;

var HomeComponent = function () {
    function HomeComponent(route) {
        _classCallCheck(this, HomeComponent);

        if (!homeComponentInstance) homeComponentInstance = this;

        this.route = route;
        this.view = null;
        this.init_view();
        this.render();

        return homeComponentInstance;
    }

    _createClass(HomeComponent, [{
        key: "init_view",
        value: function init_view() {
            this.view = React.createClass({
                render: function render() {
                    return React.createElement("p", null, React.createElement("span", { style: { fontSize: '40px' } }, "Home"));
                }
            });
        }
    }, {
        key: "render",
        value: function render() {
            ReactDOM.render(React.createElement(this.view, null), this.route.container);
        }
    }]);

    return HomeComponent;
}();
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

//preload views?

var aboutComponentInstance = null;

var AboutComponent = function () {
    function AboutComponent(route) {
        _classCallCheck(this, AboutComponent);

        if (!aboutComponentInstance) aboutComponentInstance = this;

        this.route = route;
        this.view = null;
        this.init_view();
        this.render();

        return aboutComponentInstance;
    }

    _createClass(AboutComponent, [{
        key: "init_view",
        value: function init_view() {
            this.view = React.createClass({
                render: function render() {
                    return React.createElement("p", null, React.createElement("span", { style: { fontSize: '40px' } }, "About"));
                }
            });
        }
    }, {
        key: "render",
        value: function render() {
            ReactDOM.render(React.createElement(this.view, null), this.route.container);
        }
    }]);

    return AboutComponent;
}();
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

//preload views?

var testComponentInstance = null;

var TestComponent = function () {
    function TestComponent(route) {
        _classCallCheck(this, TestComponent);

        if (!testComponentInstance) testComponentInstance = this;

        this.route = route;
        this.view = null;
        this.init_view();
        this.render();

        return testComponentInstance;
    }

    _createClass(TestComponent, [{
        key: "init_view",
        value: function init_view() {
            this.view = React.createClass({
                render: function render() {
                    return React.createElement("p", null, React.createElement("span", { style: { fontSize: '40px' } }, "Test"));
                }
            });
        }
    }, {
        key: "render",
        value: function render() {
            ReactDOM.render(React.createElement(this.view, null), this.route.container);
        }
    }]);

    return TestComponent;
}();